<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.18.1219.1533                               -->
<workbook original-version='18.1' source-build='2018.3.2 (20183.18.1219.1533)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Flu Summary (5 Year by County by Population))' inline='true' name='federated.0a5lz921qmgfgt124tc7x122d8pn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Flu Summary (5 Year by County by Population)' name='excel-direct.0ca5p0k0nw1yp41276nre0zmtutk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Whit/Documents/GitHub/dsc611-groupb-final/data/Flu Summary (5 Year by County by Population).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ca5p0k0nw1yp41276nre0zmtutk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:H916:no:A1:H916:0' header='yes' outcome='2'>
            <column datatype='string' name='Season' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='Disease' ordinal='2' />
            <column datatype='integer' name='Sum_Count' ordinal='3' />
            <column datatype='string' name='Region' ordinal='4' />
            <column datatype='string' name='County Centroid' ordinal='5' />
            <column datatype='integer' name='Population' ordinal='6' />
            <column datatype='real' name='% of Population' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disease</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Disease]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Disease</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sum_Count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County Centroid</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County Centroid]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>County Centroid</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% of Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% of Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>% of Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H916:no:A1:H916:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Lon' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_924082381913640960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM( SPLIT([County Centroid - Split 1], &quot;(&quot;, -1 ) )' />
      </column>
      <column caption='Lat' datatype='string' name='[Calculation_924082381915045890]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM( SPLIT( [County Centroid - Split 2], &quot;)&quot;, 1 ) )' />
      </column>
      <column caption='County Centroid - Split 1' datatype='string' name='[County Centroid - Split 1]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0a5lz921qmgfgt124tc7x122d8pn].[County Centroid]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( [County Centroid], &quot;(&quot;, 2 ), &quot;,&quot;, 1 ) )' />
      </column>
      <column caption='County Centroid - Split 2' datatype='string' name='[County Centroid - Split 2]' role='dimension' semantic-role='[County].[Name]' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0a5lz921qmgfgt124tc7x122d8pn].[County Centroid]'>
        <calculation class='tableau' formula='TRIM( SPLIT( SPLIT( SPLIT( [County Centroid], &quot;(&quot;, 2 ), &quot;,&quot;, 2 ), &quot;)&quot;, 1 ) )' />
      </column>
      <column datatype='string' name='[County Centroid]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Sum Count' datatype='integer' name='[Sum_Count]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.515113' measure-ordering='alphabetic' measure-percentage='0.484887' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='&quot;New York&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Season' />
        <field-sort-custom-order field='County' />
        <field-sort-custom-order field='Disease' />
        <field-sort-custom-order field='Sum_Count' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='County Centroid' />
        <field-sort-custom-order field='Calculation_924082381913640960' />
        <field-sort-custom-order field='Calculation_924082381915045890' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='% of Population' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Flu Summary (5 Year by County by Population))' name='federated.0a5lz921qmgfgt124tc7x122d8pn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a5lz921qmgfgt124tc7x122d8pn'>
            <column datatype='real' name='[% of Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Disease]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Disease]' derivation='None' name='[none:Disease:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[% of Population]' derivation='Sum' name='[sum:% of Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ALBANY&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ALLEGANY&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;BRONX&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;BROOME&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CATTARAUGUS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CAYUGA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CHAUTAUQUA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CHEMUNG&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CHENANGO&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CLINTON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;COLUMBIA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;CORTLAND&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;DELAWARE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;DUTCHESS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ERIE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ESSEX&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;FRANKLIN&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;FULTON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;GENESEE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;GREENE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;HAMILTON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;HERKIMER&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;JEFFERSON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;KINGS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;LEWIS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;LIVINGSTON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;MADISON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;MONROE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;MONTGOMERY&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;NASSAU&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;NEW YORK&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;NIAGARA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ONEIDA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ONONDAGA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ONTARIO&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ORANGE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ORLEANS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;OSWEGO&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;OTSEGO&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;PUTNAM&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;QUEENS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;RENSSELAER&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;RICHMOND&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ROCKLAND&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SARATOGA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SCHENECTADY&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SCHOHARIE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SCHUYLER&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SENECA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ST LAWRENCE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;STEUBEN&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SUFFOLK&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;SULLIVAN&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;TIOGA&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;TOMPKINS&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;ULSTER&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;WARREN&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;WASHINGTON&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;WAYNE&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;WESTCHESTER&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;WYOMING&quot;' />
              <groupfilter function='member' level='[none:County:nk]' member='&quot;YATES&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Disease:nk]'>
            <groupfilter function='level-members' level='[none:Disease:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Season:nk]'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;2017-2018&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Disease:nk]</column>
            <column>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Season:nk]</column>
            <column>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]' />
              <text column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]' />
              <geometry column='[federated.0a5lz921qmgfgt124tc7x122d8pn].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</rows>
        <cols>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Geometry (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;ALLEGANY&quot;</value>
                <value>0.43715613937817172</value>
                <value>&quot;POLYGON((-78.3088 42.0002,-78.3088 42.5216,-78.0377 42.5216,-77.8413 42.5181,-77.8344 42.4764,-77.7231 42.4712,-77.7492 41.9985,-78.2063 42.0002,-78.3088 42.0002))&quot;</value>
                <value>42.258000000000003</value>
                <value>-78.016000000000005</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Geometry (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;LEWIS&quot;</value>
                <value>1.4688712289555979</value>
                <value>&quot;POLYGON((-75.1702 44.0961,-75.1094 43.6147,-75.5282 43.4218,-75.7559 43.4705,-75.775 43.6894,-75.7854 43.7728,-75.8028 43.7885,-75.8497 43.7937,-75.841 43.8789,-75.7559 43.8806,-75.6064 43.9692,-75.5456 43.9675,-75.549 44.004,-75.5056 44.0161,-75.5004 44.0526,-75.4865 44.0718,-75.5299 44.0961,-75.5386 44.11,-75.4465 44.2177,-75.1702 44.0961))&quot;</value>
                <value>43.811</value>
                <value>-75.480000000000004</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Geometry (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Latitude (generated)]</field>
                  <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;FRANKLIN&quot;</value>
                <value>0.45973863369590684</value>
                <value>&quot;POLYGON((-74.0267 44.9963,-74.0075 44.8903,-74.0058 44.8364,-73.9884 44.7269,-73.9641 44.6974,-73.9485 44.5879,-73.9293 44.5584,-73.9102 44.4298,-74.1188 44.4089,-74.1379 44.3863,-74.0944 44.1378,-74.2821 44.1204,-74.5359 44.0996,-74.5411 44.1413,-74.5272 44.1778,-74.6419 44.9494,-74.7183 44.9563,-74.727 44.9946,-74.7183 44.9981,-74.5428 44.9981,-74.3343 44.9928,-74.0267 44.9963))&quot;</value>
                <value>44.554000000000002</value>
                <value>-74.316999999999993</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]' type='filter' />
            <card mode='slider' param='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Season:nk]' type='filter' />
            <card mode='radiolist' param='[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Disease:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:County:nk]</field>
            <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Disease:nk]</field>
            <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[none:Season:nk]</field>
            <field>[federated.0a5lz921qmgfgt124tc7x122d8pn].[sum:% of Population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2320ADD0-7679-4C33-BBE4-F2C05FB9A034}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      ffz9p+Bl8as9fw5efLuiRq9Fq/WM6qX/c/CS1pOXJfHiWy3n4pVytSxeQ+gnalarFa6vr+Oe
      lcmVYF6JljelRSxm6Dk3rTJMVdafopH+6roehFCQNuSmkerlg9KUcGifU7TQ/3PjxQVqLl4p
      AUpZlp8LLz5+tDa9aDha9dNiLNVP6010pzQd80MxQc65sQukNcbU4UaaxpHvSY0gk9xBxJmV
      7o5MtHvIORfdsKZpsN/vByvJnEZLS2vJyvtUvOTcP/EqfesUbbITUBmWqzK3cxB9ku6fAi9+
      iclcvCzXKoR+QM13FlLcDz3fbDZRIdKUcMHBsPzMqU0NlunixKbM1pTJJqBooEM9mQbaj4+P
      Mf9yuYyMy1tiSMi4KaffadpW44fz9Fy8ZN28PKIthdeUSya/a+6jzMfrnIOXLG+qU1h4ybGm
      laxZJrnvgH7jlzR67+NU7cXFBT5+/Di0brIAiyECgqZHeWMB4/MkJUPaooemaSRzZVni/fv3
      +PjxI969e4cQ+lkbOnplu932t6I0TTzGXWotS2MQP/w0bEuQLKE9FS/uenAspMa08NLqJLws
      d8F6R362rI6G45TmtpRiig6JF098skGW17bt6AQJmejsKjq0gfDS+wLHAAAHMUlEQVQajQGs
      xiStxmMzNG0kmePM0BQUz0t+utRUpPEfHx9xe3sbtf/Dw0Nc0eV5qRPw+sglog36WqIb7PnR
      kBr/GjZPwcsSSs0KnIqXZo002qislMtkJcsCyTxz8ZL0SLwkTtyzCCFgvV4ndx/yuwMIT5p9
      irNAlsaUrorms/JEPmnKVMuBlCUglOq6xs3NTRRuDbwQ+gEO7UWgFVKqr2karNfreAcCLZyQ
      NiiKwowxSrlnT8GLY2NN9/JyTsVL0qjxovEh88mBL3+WcnnOhZfU+PSb3IZJW3b5OVJVVaE6
      rJVInri1f/nyZX8qRIp4K3ETyOO3KbaHl8cZkPVpJo27D59//jnu7u4i4/xCPg4i0AvH4+Mj
      lsvl6GSKEI6Hajnn0LYttttt3NvA69XMvazrOXjRe/zUBF7eZrOJpyCfgpemueUzy9+W5fLv
      kg+tbK3M5+ClbZDXXD1a2ScLT/vYNfqcc3j9+jVevnyJ29tbPDw89KdCaMyl/FvJIAkU+eZa
      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
      mv/cDtAAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
